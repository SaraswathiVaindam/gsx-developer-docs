{"version":3,"sources":["Typesense/Synonyms.js"],"names":["RESOURCEPATH","Synonyms","collectionName","apiCall","_collectionName","_apiCall","synonymId","params","put","_endpointPath","get","operation","Collections","undefined"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AAEA,IAAMA,YAAY,GAAG,WAArB;;IAEqBC,Q;AACnB,oBAAaC,cAAb,EAA6BC,OAA7B,EAAsC;AAAA;AACpC,SAAKC,eAAL,GAAuBF,cAAvB;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACD;;;;WAED,gBAAQG,SAAR,EAAmBC,MAAnB,EAA2B;AACzB,aAAO,KAAKF,QAAL,CAAcG,GAAd,CAAkB,KAAKC,aAAL,CAAmBH,SAAnB,CAAlB,EAAiDC,MAAjD,CAAP;AACD;;;WAED,oBAAY;AACV,aAAO,KAAKF,QAAL,CAAcK,GAAd,CAAkB,KAAKD,aAAL,EAAlB,CAAP;AACD;;;WAED,uBAAeE,SAAf,EAA0B;AACxB,uBAAUC,qBAAYZ,YAAtB,cAAsC,KAAKI,eAA3C,SAA6DH,QAAQ,CAACD,YAAtE,SAAqFW,SAAS,KAAKE,SAAd,GAA0B,EAA1B,GAA+B,MAAMF,SAA1H;AACD;;;SAED,eAA2B;AACzB,aAAOX,YAAP;AACD","sourcesContent":["'use strict'\n\nimport Collections from './Collections'\n\nconst RESOURCEPATH = '/synonyms'\n\nexport default class Synonyms {\n  constructor (collectionName, apiCall) {\n    this._collectionName = collectionName\n    this._apiCall = apiCall\n  }\n\n  upsert (synonymId, params) {\n    return this._apiCall.put(this._endpointPath(synonymId), params)\n  }\n\n  retrieve () {\n    return this._apiCall.get(this._endpointPath())\n  }\n\n  _endpointPath (operation) {\n    return `${Collections.RESOURCEPATH}/${this._collectionName}${Synonyms.RESOURCEPATH}${operation === undefined ? '' : '/' + operation}`\n  }\n\n  static get RESOURCEPATH () {\n    return RESOURCEPATH\n  }\n}\n"],"file":"Synonyms.js"}